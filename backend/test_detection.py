# test_detection.py - VERSION CORRIG√âE
from app import create_app
from app.services.tuya_service import TuyaClient

def test_detection_simple():
    """Test simple de d√©tection avec contexte Flask"""
    
    # ‚úÖ CORRECTION : Cr√©er le contexte Flask
    app = create_app()
    
    with app.app_context():
        try:
            # Import dans le contexte
            from app.services.triphase_detection_service import TriphaseDetectionService
            
            # 1. Connexion Tuya
            tuya_client = TuyaClient()
            if not tuya_client.auto_connect_from_env():
                print("‚ùå Connexion Tuya impossible")
                return
            
            # 2. Service de d√©tection
            detector = TriphaseDetectionService(tuya_client)
            
            # 3. RAPPORT SANS MODIFICATION (s√©curis√©)
            print("üìã G√©n√©ration rapport de d√©tection...")
            report = detector.get_detection_report()
            
            if report.get("success"):
                print(f"‚úÖ R√âSULTATS D√âTECTION:")
                print(f"   Total appareils: {report['summary']['total_devices']}")
                print(f"   Triphas√©s d√©tect√©s: {report['summary']['triphase_detected']}")
                print(f"   Monophas√©s: {report['summary']['monophase_detected']}")
                print(f"   Taux d√©tection: {report['summary']['detection_rate']}%")
                
                # Afficher les triphas√©s trouv√©s
                if report['triphase_devices']:
                    print(f"\nüîå APPAREILS TRIPHAS√âS D√âTECT√âS:")
                    for device in report['triphase_devices']:
                        print(f"   üì± {device['name']}")
                        print(f"      Confiance: {device['confidence']}%")
                        print(f"      Indicateurs: {', '.join(device['key_indicators'][:3])}")
                        print()
                else:
                    print("\n‚ÑπÔ∏è Aucun appareil triphas√© d√©tect√©")
                
                print("‚úÖ Ce rapport ne modifie RIEN dans votre base de donn√©es")
                
            else:
                print(f"‚ùå Erreur: {report.get('error')}")
                
        except Exception as e:
            print(f"‚ùå Erreur dans le contexte: {e}")
            import traceback
            traceback.print_exc()

if __name__ == "__main__":
    test_detection_simple()